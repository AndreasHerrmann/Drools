//created on: 18.02.2016
package de.hdm.drools

//list any import classes here.
import javax.ws.rs.container.AsyncResponse;
import javax.ws.rs.core.Response;
import de.hdm.drools.resource.*;
import de.hdm.drools.nachricht.*;

declare Abfahrt
	@role(event)
end
declare Einfahrt
	@role(event)
end
declare EinfahrtAnfrageMitAsyncResponse
	@role(event)
end
declare EinfahrtMitAsyncResponse
	@role(event)
end
declare EinfahrtErlaubnis
	@role(event)
end

rule "Erste EinfahrtAnfrage ohne Gleisangabe beantworten"
    when
        $einfahrtAnfrage:EinfahrtAnfrageMitAsyncResponse(istErledigt==false && gleis==null) and
        $gleis:Gleis() and
        not EinfahrtAnfrageMitAsyncResponse(istErledigt==true && gleis.nummer==$gleis.nummer && this before $einfahrtAnfrage)
        not EinfahrtErlaubnis(gleis.nummer==$gleis.nummer) and
        not EinfahrtMitAsyncResponse(gleis.nummer==$gleis.nummer)
    then
        $einfahrtAnfrage.setIstErledigt(true);
        update($einfahrtAnfrage);
        EinfahrtErlaubnis einfahrtErlaubnis = new EinfahrtErlaubnis($einfahrtAnfrage.getZug(),$gleis);
        insert(einfahrtErlaubnis);
        $einfahrtAnfrage.getAsyncResponse().resume(Response.ok(einfahrtErlaubnis).build());
end

rule "EinfahrtAnfrage ohne Gleisangabe beantworten"
    when
        $einfahrtAnfrage:EinfahrtAnfrageMitAsyncResponse(istErledigt==false && gleis==null) and
        $gleis:Gleis() and
        $einfahrtErlaubnis:EinfahrtErlaubnis(gleis.nummer==$gleis.nummer) and
        $abfahrt:Abfahrt(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && zug.id==$einfahrtErlaubnis.zug.id && this after $einfahrtErlaubnis) and
        not EinfahrtErlaubnis(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && this after $einfahrtErlaubnis) and
        not EinfahrtMitAsyncResponse(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && this after $abfahrt) 
    then
        $einfahrtAnfrage.setIstErledigt(true);
        update($einfahrtAnfrage);
        EinfahrtErlaubnis einfahrtErlaubnis = new EinfahrtErlaubnis($einfahrtAnfrage.getZug(),$gleis);
        insert(einfahrtErlaubnis);
        $einfahrtAnfrage.getAsyncResponse().resume(Response.ok(einfahrtErlaubnis).build());
end

rule "Erste EinfahrtAnfrage mit Gleisangabe beantworten"
	when
		$einfahrtAnfrage:EinfahrtAnfrageMitAsyncResponse(istErledigt==false && gleis!=null) and
        exists Gleis(nummer==$einfahrtAnfrage.gleis.nummer) and
        not EinfahrtAnfrageMitAsyncResponse(istErledigt==true && gleis.nummer==$einfahrtAnfrage.gleis.nummer && this before $einfahrtAnfrage)
        not EinfahrtErlaubnis(gleis.nummer==$einfahrtAnfrage.gleis.nummer) and
        not EinfahrtMitAsyncResponse(gleis.nummer==$einfahrtAnfrage.gleis.nummer)
	then
		$einfahrtAnfrage.setIstErledigt(true);
		update($einfahrtAnfrage);
		EinfahrtErlaubnis einfahrtErlaubnis = new EinfahrtErlaubnis($einfahrtAnfrage.getZug(),$einfahrtAnfrage.getGleis());
		insert(einfahrtErlaubnis);
		$einfahrtAnfrage.getAsyncResponse().resume(Response.ok(einfahrtErlaubnis).build());
end

rule "EinfahrtAnfrage mit Gleisangabe beantworten"
	when
		$einfahrtAnfrage:EinfahrtAnfrageMitAsyncResponse(istErledigt==false && gleis!=null) and
        exists Gleis(nummer==$einfahrtAnfrage.gleis.nummer) and
        $einfahrtErlaubnis:EinfahrtErlaubnis(gleis.nummer==$einfahrtAnfrage.gleis.nummer) and
        $abfahrt:Abfahrt(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && zug.id==$einfahrtErlaubnis.zug.id && this after $einfahrtErlaubnis) and
        not EinfahrtErlaubnis(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && this after $einfahrtErlaubnis) and
        not EinfahrtMitAsyncResponse(gleis.nummer==$einfahrtErlaubnis.gleis.nummer && this after $abfahrt)
	then
		$einfahrtAnfrage.setIstErledigt(true);
		update($einfahrtAnfrage);
		EinfahrtErlaubnis einfahrtErlaubnis = new EinfahrtErlaubnis($einfahrtAnfrage.getZug(),$einfahrtAnfrage.getGleis());
		insert(einfahrtErlaubnis);
		$einfahrtAnfrage.getAsyncResponse().resume(Response.ok(einfahrtErlaubnis).build());
end

rule "Erste Einfahrt auf Gleis beantworten"
	when
		$einfahrt:EinfahrtMitAsyncResponse(istErledigt==false) and
		exists Gleis(nummer==$einfahrt.gleis.nummer) and
		exists EinfahrtErlaubnis(gleis.nummer==$einfahrt.gleis.nummer && zug.id==$einfahrt.zug.id) and
		not EinfahrtMitAsyncResponse(gleis.nummer==$einfahrt.gleis.nummer && istErledigt==true) and
		not EinfahrtErlaubnis(gleis.nummer==$einfahrt.gleis.nummer && zug.id!=$einfahrt.zug.id)
	then
	$einfahrt.setIstErledigt(true);
	update($einfahrt);
	$einfahrt.getAsyncResponse().resume(Response.ok().build());
end

rule "Einfahrt auf Gleis beantworten"
	when
		$einfahrt:EinfahrtMitAsyncResponse(istErledigt==false) and
		exists Gleis(nummer==$einfahrt.gleis.nummer) and
		$einfahrtErlaubnis:EinfahrtErlaubnis(gleis.nummer==$einfahrt.gleis.nummer && zug.id==$einfahrt.zug.id) over window:time(2m) and
		not EinfahrtErlaubnis(gleis.nummer==$einfahrt.gleis.nummer && this after $einfahrtErlaubnis) and
		not EinfahrtMitAsyncResponse(gleis.nummer==$einfahrt.gleis.nummer && istErledigt==true && this after $einfahrtErlaubnis)
	then
		$einfahrt.setIstErledigt(true);
		update($einfahrt);
		$einfahrt.getAsyncResponse().resume(Response.ok().build());
end